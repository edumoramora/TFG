{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthenticationService {\n  constructor(http) {\n    this.http = http;\n    this.loginUrl = 'http://localhost:3000/api/login';\n  }\n  login(credentials) {\n    return this.http.post(this.loginUrl, credentials);\n  }\n  handleError(error) {\n    let errorMsg = 'Ocurrió un error desconocido';\n    if (error.status === 401) {\n      errorMsg = 'Contraseña incorrecta';\n    } else if (error.status === 404) {\n      errorMsg = 'Usuario no encontrado';\n    }\n    return throwError(errorMsg);\n  }\n  static #_ = this.ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthenticationService","constructor","http","loginUrl","login","credentials","post","handleError","error","errorMsg","status","throwError","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\morit\\Downloads\\TeatroSinFiltros\\TeatroSinFiltros\\src\\app\\services\\authentication.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  private loginUrl = 'http://localhost:3000/api/login'; \n\n  constructor(private http: HttpClient) {}\n\n  login(credentials: { nombre_usuario: string; contrasena: string; }): Observable<any> {\n    return this.http.post(this.loginUrl, credentials);\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    let errorMsg = 'Ocurrió un error desconocido';\n    if (error.status === 401) {\n      errorMsg = 'Contraseña incorrecta';\n    } else if (error.status === 404) {\n      errorMsg = 'Usuario no encontrado';\n    }\n    return throwError(errorMsg);\n  }\n}\n\n"],"mappings":";;AAOA,OAAM,MAAOA,qBAAqB;EAGhCC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,QAAQ,GAAG,iCAAiC;EAEb;EAEvCC,KAAKA,CAACC,WAA4D;IAChE,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,QAAQ,EAAEE,WAAW,CAAC;EACnD;EAEQE,WAAWA,CAACC,KAAwB;IAC1C,IAAIC,QAAQ,GAAG,8BAA8B;IAC7C,IAAID,KAAK,CAACE,MAAM,KAAK,GAAG,EAAE;MACxBD,QAAQ,GAAG,uBAAuB;KACnC,MAAM,IAAID,KAAK,CAACE,MAAM,KAAK,GAAG,EAAE;MAC/BD,QAAQ,GAAG,uBAAuB;;IAEpC,OAAOE,UAAU,CAACF,QAAQ,CAAC;EAC7B;EAAC,QAAAG,CAAA,G;qBAjBUZ,qBAAqB,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAArBjB,qBAAqB;IAAAkB,OAAA,EAArBlB,qBAAqB,CAAAmB,IAAA;IAAAC,UAAA,EAFpB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}