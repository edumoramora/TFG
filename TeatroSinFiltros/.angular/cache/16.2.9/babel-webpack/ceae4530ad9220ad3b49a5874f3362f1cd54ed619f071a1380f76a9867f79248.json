{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\n// ...\nexport class DetallesObraComponent {\n  constructor(route) {\n    this.route = route;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      params['id']; // El '+' convierte el parámetro en un número\n      // Aquí puedes añadir la lógica para cargar los detalles de la obra\n    });\n  }\n  static #_ = this.ɵfac = function DetallesObraComponent_Factory(t) {\n    return new (t || DetallesObraComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DetallesObraComponent,\n    selectors: [[\"app-detalles-obra\"]],\n    decls: 13,\n    vars: 0,\n    consts: [[1, \"login-container\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"required\", \"\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function DetallesObraComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\")(2, \"div\", 1)(3, \"label\", 2);\n        i0.ɵɵtext(4, \"Nombre de usuario:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 1)(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Contrase\\u00F1a:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 6);\n        i0.ɵɵtext(11, \"Iniciar sesi\\u00F3n\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(12, \"br\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["DetallesObraComponent","constructor","route","ngOnInit","params","subscribe","_","i0","ɵɵdirectiveInject","i1","ActivatedRoute","_2","selectors","decls","vars","consts","template","DetallesObraComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["C:\\Users\\satbranigan\\TeatroSinFiltros\\TeatroSinFiltros\\src\\app\\detalles-obra\\detalles-obra.component.ts","C:\\Users\\satbranigan\\TeatroSinFiltros\\TeatroSinFiltros\\src\\app\\detalles-obra\\detalles-obra.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n// ...\n\n\n@Component({\n  selector: 'app-detalles-obra',\n  templateUrl: './detalles-obra.component.html',\n  styleUrls: ['./detalles-obra.component.css']\n})\nexport class DetallesObraComponent  {\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n       params['id']; // El '+' convierte el parámetro en un número\n      // Aquí puedes añadir la lógica para cargar los detalles de la obra\n    });\n  }\n}\n\n\n","<div class=\"login-container\">\n    <form >\n      <div class=\"form-group\">\n        <label for=\"username\">Nombre de usuario:</label>\n        <input type=\"text\" id=\"username\"  name=\"username\" required>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Contraseña:</label>\n        <input type=\"password\" id=\"password\" name=\"password\" required>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Iniciar sesión</button>\n    </form>\n    <br>\n  \n</div>\n"],"mappings":";;;AAEA;AAQA,OAAM,MAAOA,qBAAqB;EAChCC,YAAoBC,KAAqB;IAArB,KAAAA,KAAK,GAALA,KAAK;EAAoB;EAE7CC,QAAQA,CAAA;IACN,IAAI,CAACD,KAAK,CAACE,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MAClCA,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;MACf;IACF,CAAC,CAAC;EACJ;EAAC,QAAAE,CAAA,G;qBARUN,qBAAqB,EAAAO,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAArBX,qBAAqB;IAAAY,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVlCX,EAAA,CAAAa,cAAA,aAA6B;QAGCb,EAAA,CAAAc,MAAA,yBAAkB;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QAChDf,EAAA,CAAAgB,SAAA,eAA2D;QAC7DhB,EAAA,CAAAe,YAAA,EAAM;QACNf,EAAA,CAAAa,cAAA,aAAwB;QACAb,EAAA,CAAAc,MAAA,uBAAW;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACzCf,EAAA,CAAAgB,SAAA,eAA8D;QAChEhB,EAAA,CAAAe,YAAA,EAAM;QACNf,EAAA,CAAAa,cAAA,iBAA8C;QAAAb,EAAA,CAAAc,MAAA,2BAAc;QAAAd,EAAA,CAAAe,YAAA,EAAS;QAEvEf,EAAA,CAAAgB,SAAA,UAAI;QAERhB,EAAA,CAAAe,YAAA,EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}